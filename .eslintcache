[{"/Users/namuk/Documents/github/hook-practice/src/index.js":"1","/Users/namuk/Documents/github/hook-practice/src/useStateApp.js":"2","/Users/namuk/Documents/github/hook-practice/src/UseStateApp.js":"3","/Users/namuk/Documents/github/hook-practice/src/useInputApp.js":"4","/Users/namuk/Documents/github/hook-practice/src/UseInputApp.js":"5","/Users/namuk/Documents/github/hook-practice/src/UseEffectApp.js":"6","/Users/namuk/Documents/github/hook-practice/src/UseConfirmApp.js":"7","/Users/namuk/Documents/github/hook-practice/src/UseNetworkApp.js":"8"},{"size":525,"mtime":1608907509898,"results":"9","hashOfConfig":"10"},{"size":1064,"mtime":1608134005688,"results":"11","hashOfConfig":"10"},{"size":1064,"mtime":1608134005688,"results":"12","hashOfConfig":"10"},{"size":1554,"mtime":1608134031801,"results":"13","hashOfConfig":"10"},{"size":747,"mtime":1608185198192,"results":"14","hashOfConfig":"10"},{"size":468,"mtime":1608907527252,"results":"15","hashOfConfig":"10"},{"size":761,"mtime":1608401546796,"results":"16","hashOfConfig":"10"},{"size":1145,"mtime":1608232757541,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"31sl5i",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},"/Users/namuk/Documents/github/hook-practice/src/index.js",[],"/Users/namuk/Documents/github/hook-practice/src/useStateApp.js",["38"],"/Users/namuk/Documents/github/hook-practice/src/UseStateApp.js",["39"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// With hooks(useState)\n\nexport const UseStateApp = () => {\n  const [item, setItem] = useState(0);\n  const addItem = () => setItem(item + 1);\n  const minusItem = () => setItem(item - 1);\n  return (\n    <div className=\"App\">\n      <h1>{item}</h1>\n      <button onClick={addItem}>+</button>\n      <button onClick={minusItem}>-</button>\n    </div>\n  );\n};\n\n// Without hooks(useState)\n\n// export default class AppUgly extends React.Component {\n//   state = {\n//     item: 1\n//   };\n//   render() {\n//     const { item } = this.state;\n//     return (\n//       <div className=\"App\">\n//         <h1>{item}</h1>\n//         <button onClick={this.addItem}>+</button>\n//         <button onClick={this.minusItem}>-</button>\n//       </div>\n//     );\n//   }\n//   addItem = () => {\n//     this.setState((state) => {\n//       return { item: state.item + 1 };\n//     });\n//   };\n//   minusItem = () => {\n//     this.setState((state) => {\n//       return { item: state.item - 1 };\n//     });\n//   };\n// }\n",["40","41"],"/Users/namuk/Documents/github/hook-practice/src/useInputApp.js",["42"],"/Users/namuk/Documents/github/hook-practice/src/UseInputApp.js",["43"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst useInput = (initialValue, validator) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    let willUpdate = true;\n    if (typeof validator === \"function\") {\n      willUpdate = validator(value);\n    }\n    if (willUpdate) {\n      setValue(value);\n    }\n  };\n  return { value, onChange };\n};\n\nexport const UseInputApp = () => {\n  const maxLen = (value) => value.length <= 10;\n  const name = useInput(\"Mr.\", maxLen);\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n      <input placeholder=\"Name\" {...name} />\n      <h3>이름은 {name.value} </h3>\n    </div>\n  );\n};\n","/Users/namuk/Documents/github/hook-practice/src/UseEffectApp.js",[],"/Users/namuk/Documents/github/hook-practice/src/UseConfirmApp.js",[],"/Users/namuk/Documents/github/hook-practice/src/UseNetworkApp.js",["44"],"import React, { useState, useEffect } from \"react\";\n\nconst useNetwork = (onChange) => {\n  const [status, setStatus] = useState(navigator.onLine);\n  const handleChange = () => {\n    if (typeof onChange === \"function\") {\n      onChange(navigator.onLine);\n    }\n    setStatus(navigator.onLine);\n  };\n  useEffect(() => {\n    window.addEventListener(\"online\", handleChange);\n    window.addEventListener(\"offline\", handleChange);\n    return (\n      () => window.removeEventListener(\"online\", handleChange),\n      window.removeEventListener(\"offline\", handleChange)\n    );\n    // () => {\n    //     window.removeEventListener(\"online\", handleChange);\n    //     window.removeEventListener(\"offline\", handleChange);\n    //   }; 이렇게 적어도 됨 (return 대신) 단, 맨 윗줄에 /* eslint-disable */ 꼭 적어줘야함.\n  }, []);\n  return status;\n};\n\nexport const UseNetworkApp = () => {\n  const handleNetworkChange = (online) => {\n    console.log(online ? \"We just went online\" : \"We are offline\");\n  };\n  const onLine = useNetwork(handleNetworkChange);\n  return (\n    <div>\n      <h1> {onLine ? \"Online\" : \"Offline\"} </h1>\n    </div>\n  );\n};\n",{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":22,"column":6,"nodeType":"55","endLine":22,"endColumn":8,"suggestions":"56"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [handleChange]",{"range":"62","text":"63"},[786,788],"[handleChange]"]